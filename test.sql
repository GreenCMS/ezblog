-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2013 年 03 月 03 日 13:13
-- 服务器版本: 5.5.24-log
-- PHP 版本: 5.4.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `test`
--

-- --------------------------------------------------------

--
-- 表的结构 `comments`
--

CREATE TABLE IF NOT EXISTS `comments` (
  `comment_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) NOT NULL,
  `comment_author` tinytext COLLATE utf8_unicode_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `comment_author_url` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `comment_author_IP` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `comment_date` date NOT NULL,
  `comment_approved` tinyint(4) NOT NULL DEFAULT '1',
  `comment_parent` bigint(20) NOT NULL,
  `user_id` bigint(20) NOT NULL,
  PRIMARY KEY (`comment_ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `links`
--

CREATE TABLE IF NOT EXISTS `links` (
  `url_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `url_site` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `url_description` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `ID` int(100) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=3 ;

--
-- 转存表中的数据 `links`
--

INSERT INTO `links` (`url_name`, `url_site`, `url_description`, `ID`) VALUES
('Z的博客', 'http://www.zts1993.com/', '', 1),
('站长工具网', 'http://ip.zts1993.com/', '', 2);

-- --------------------------------------------------------

--
-- 表的结构 `options`
--

CREATE TABLE IF NOT EXISTS `options` (
  `option_id` int(11) NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  `option_value` longtext COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`option_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `posts`
--

CREATE TABLE IF NOT EXISTS `posts` (
  `post_hits` int(11) NOT NULL DEFAULT '0',
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) NOT NULL,
  `post_title` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_content` longtext CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `time` date NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `title_5` (`post_title`),
  KEY `title_6` (`post_title`),
  KEY `ID` (`ID`),
  KEY `ID_2` (`ID`),
  FULLTEXT KEY `title` (`post_title`),
  FULLTEXT KEY `title_2` (`post_title`),
  FULLTEXT KEY `context` (`post_content`),
  FULLTEXT KEY `title_3` (`post_title`),
  FULLTEXT KEY `title_4` (`post_title`),
  FULLTEXT KEY `title_7` (`post_title`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=16 ;

--
-- 转存表中的数据 `posts`
--

INSERT INTO `posts` (`post_hits`, `ID`, `post_author`, `post_title`, `post_status`, `comment_status`, `post_content`, `time`) VALUES
(42, 1, 0, '欢迎使用', '', '', '欢迎使用', '2012-09-28'),
(82, 2, 0, '越狱猴抢走并砸碎游客苹果手机-可以看出，此猴子是狗粉', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	据《华商晨报》报道 看到逃出笼舍在众人面前肆无忌惮讨要食物的猴子，游客们喜欢得不得了，一个年轻人掏出了<a href="http://www.zts1993.com/tag/%e8%8b%b9%e6%9e%9c/" target="_blank">苹果</a>手机按下了快门。<strong>哪知猴子快步冲来，抢下手机，一溜烟钻回了笼舍。这难以置信的一幕就发生在10月4日的辽宁本溪平顶山猴园。</strong>\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	10月4日上午，位于本溪市平顶山脚下的猴园吸引了大批游客的驻足。一只成年的猴子突然出现在人群中，“可能是嫌喂食吃不过瘾，那只直接从笼子上面的缝 隙里面钻出来了。”陈先生告诉记者，站在人群中的猴子并不怕人，而是大摇大摆地在人群中穿梭，看到有人手里拿着食物，还会主动上前作揖讨要。游客们争相给 这只“<a href="http://www.zts1993.com/tag/%e8%b6%8a%e7%8b%b1/" target="_blank">越狱</a>”的猴子喂食，一位年轻人看到这个场面，立即掏出<a href="http://www.zts1993.com/tag/%e8%8b%b9%e6%9e%9c/" target="_blank">苹果</a>手机，按下快门记录下了这一幕。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	快门声引起了猴子的注意，它先是愣了下神儿，仔细观瞧了一番，突然快步冲了上来，直接抢过男青年手中的手机，转身就跑，钻回到了笼舍里。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	被夺走手机的年轻人找来了猴园的饲养员，饲养员对“肇事”的猴子厉声训斥，猴子的爪子一松，手机从10米多高的位置直接摔在了地面上。看到自己的手机彻底报废，男青年气愤不已，要求饲养员赔偿。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	昨日上午，记者联系到了本溪平顶山猴园，园方的工作人员表示，男青年回家后取来了手机的发票，最终园方按照发票上面的价格全额赔偿了对方的损失。与此同时，园方已经对猴园的笼舍进行了修补，防止再有类似的事件发生。\r\n</p>', '2012-10-10'),
(166, 3, 0, 'ME525 4.1 CM10开启swap', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	首先说明本人已经开启，~！绝不忽悠\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	前提条件：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/cm10/">CM10</a>&nbsp;Q大原版最好\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/cm10/">CM10</a>&nbsp;Q大内核\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	TF卡速度却快越好，山寨的就算了。。。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	昨天刷了内核历经千辛万苦（你们懂的）<br />\r\n想开<a href="http://www.zts1993.com/tag/swap/">swap</a>，看到某人教程却没有成功提示权限不足。<br />\r\n在这里说一下首先对TF卡分区 用DiskGenius删除原tf卡分区然后保存分区<br />\r\n1.新建分区fat32 大小（卡容量--<a href="http://www.zts1993.com/tag/swap/">swap</a>大小）<br />\r\n2.新建分区<a href="http://www.zts1993.com/category/os/linux/">linux</a>&nbsp;<a href="http://www.zts1993.com/tag/swap/">swap</a>&nbsp;大小（<a href="http://www.zts1993.com/tag/swap/">swap</a>大小）<br />\r\n3.格式化fat32分区（一定在我的电脑里能看到fat32的这个分区，看不到的为分区分配盘符，<a href="http://www.zts1993.com/tag/swap/">swap</a>&nbsp;分区时看不到的）\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	下面才是正题<br />\r\n我看到的简单教程是这样一句话<br />\r\nswapon /dev/block/mmcblk0p2<br />\r\n非常遗憾提示权限错误\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	我的方法<br />\r\nsu（回车）<br />\r\nbusybox mkswap /dev/block/mmcblk0p2（回车）<br />\r\nbusybox swapon /dev/block/mmcblk0p2（回车）\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	简单解释一下<br />\r\nsu可以获取root权限（不明白的应该去百度了）<br />\r\n其实很简单的{:4_133:}\r\n</p>', '2012-10-10'),
(3, 4, 0, 'CGI、FastCGI、PHP-CGI、PHP-FPM、Spawn-FCGI区别', '', '', '<h1 style="font-size:18px;color:#2654A1;">\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>什么是<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a></strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>全称是“公共网关接口”(Common Gateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>,perl,tcl等\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>什么是<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a></strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>像是一个常驻(long-live)型的<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>最为人诟病的fork-and-execute 模式)。它还支持分布式的运算, 即&nbsp;<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>&nbsp;程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>是语言无关的、可伸缩架构的<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>开放扩展，其主要行为是将<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>解释器进程保持在内存中并因此获得较高的性能。众所周知，<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>解释器的反复加载是<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>性能低下的主要原因，如果<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>解释器保持在内存中并接受<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong><a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>与<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>特点</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		1、如<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>，<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>也具有语言无关性.\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		2、如<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>,&nbsp;<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>在进程中的应用程序，独立于核心web服务器运行,提供了一个比API更安全的环境。(APIs把应用程序的代码与核心的web服务器链接在一起，这意味着在一个错误的API的应用程序可能会损坏其他应用程序或核心服务器; 恶意的API的应用程序代码甚至可以窃取另一个应用程序或核心服务器的密钥。)\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		3、<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>技术目前支持语言有：C/C++、<a href="http://www.zts1993.com/category/code/java-code/">Java</a>、Perl、Tcl、<a href="http://www.zts1993.com/category/code/python/">Python</a>、SmallTalk、Ruby等。相关模块在Apache, ISS, Lighttpd等流行的服务器上也是可用的。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		4、如<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>，<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>的不依赖于任何Web服务器的内部架构，因此即使服务器技术的变化,&nbsp;<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>依然稳定不变。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong><a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>的工作原理</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		1、Web Server启动时载入<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理器（IIS ISAPI或Apache Module)\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		2、<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理器自身初始化，启动多个<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>解释器进程(可见多个<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi)并等待来自Web Server的连接。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		3、当客户端请求到达Web Server时，<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理器选择并连接到一个<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>解释器。Web server将<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>环境变量和标准输入发送到<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>子进程<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		4、<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>子进程关闭连接时，请求便告处理完成。<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>子进程接着等待并处理来自<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理器(运行在Web Server中)的下一个连接。 在<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>模式中，<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi在此便退出了。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		在上述情况中，你可以想象<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>通常有多慢。每一个Web请求PHP都必须重新解析<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>.ini、重新载入全部扩展并重初始化全部数据结构。使用<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong><a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>的不足</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		因为是多进程，所以比<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>多线程消耗更多的服务器内存，<a href="http://www.zts1993.com/tag/php-cgi/" target="_blank">PHP-CGI</a>解释器每进程消耗7至25兆内存，将这个数字乘以50或100就是很大的内存数。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		Nginx 0.8.46+PHP 5.2.14(<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>)服务器在3万并发连接下，开启的10个Nginx进程消耗150M内存（15M*10=150M），开启的64个<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi进程消耗1280M内存（20M*64=1280M），加上系统自身消耗的内存，总共消耗不到2GB内存。如果服务器内存较小，完全可以只开启25个<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi进程，这样<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi消耗的总内存数才500M。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		上面的数据摘自Nginx 0.8.x + PHP 5.2.13(<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>)搭建胜过Apache十倍的Web服务器(第6版)\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>什么是PHP-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a></strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>是PHP自带的<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>管理器。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		启动PHP-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>，使用如下命令：\r\n	</p>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n		<div>\r\n		</div>\r\n	</div>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n<pre>1</pre>\r\n					</td>\r\n					<td>\r\n<pre><a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi -b 127.0.0.1:9000</pre>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>PHP-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>的不足</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		1、<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi变更<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>.ini配置后需重启<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi才能让新的<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-ini生效，不可以平滑重启\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		2、直接杀死<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi进程,<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>就不能运行了。(<a href="http://www.zts1993.com/tag/php-fpm/" target="_blank">PHP-FPM</a>和<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>就没有这个问题,守护进程会平滑从新生成新的子进程。）\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>什么是PHP-FPM</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP-FPM是一个PHP&nbsp;<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>管理器，是只用于PHP的,可以在 http://<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-fpm.org/download下载得到.\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP-FPM其实是PHP源代码的一个补丁，旨在将<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程管理整合进PHP包中。必须将它patch到你的PHP源代码中，在编译安装PHP后才可以使用。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		现在我们可以在最新的PHP 5.3.2的源码树里下载得到直接整合了PHP-FPM的分支，据说下个版本会融合进PHP的主分支去。相对<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>，PHP-FPM在CPU和内存方面的控制都更胜一筹，而且前者很容易崩溃，必须用crontab进行监控，而PHP-FPM则没有这种烦恼。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP5.3.3已经集成<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-fpm了，不再是第三方的包了。PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载PHP配置，比<a href="http://www.zts1993.com/tag/spawn-fcgi/">spawn-fcgi</a>具有更多有点，所以被PHP官方收录了。在./configure的时候带 –enable-fpm参数即可开启PHP-FPM。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		使用PHP-FPM来控制PHP-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>的<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程\r\n	</p>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n		<div>\r\n		</div>\r\n	</div>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n<pre>1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8</pre>\r\n					</td>\r\n					<td>\r\n<pre>/usr/local/<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>/sbin/<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-fpm{start|stop|quit|restart|reload|logrotate}\r\n\r\n--start 启动<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>的fastcgi进程\r\n--stop 强制终止<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>的fastcgi进程\r\n--quit 平滑终止<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>的fastcgi进程\r\n--restart 重启<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>的fastcgi进程\r\n--reload 重新平滑加载<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>的<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>.ini\r\n--logrotate 重新启用log文件</pre>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>什么是<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a></strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>是一个通用的<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>管理服务器，它是lighttpd中的一部份，很多人都用Lighttpd的<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>进行<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>模式下的管理工作，不过有不少缺点。而PHP-FPM的出现多少缓解了一些问题，但PHP-FPM有个缺点就是要重新编译，这对于一些已经运行的环境可能有不小的风险(refer)，在<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>&nbsp;5.3.3中可以直接使用PHP-FPM了。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>目前已经独成为一个项目，更加稳定一些，也给很多Web 站点的配置带来便利。已经有不少站点将它与nginx搭配来解决动态网页。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		最新的lighttpd也没有包含这一块了(http://www.lighttpd<a href="http://www.zts1993.com/category/code/net/">.net</a>/search?q=<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>)，但可以在以前版本中找到它。在lighttpd-1.4.15版本中就包含了(http://www.lighttpd<a href="http://www.zts1993.com/category/code/net/">.net</a>/download/lighttpd-1.4.15.tar.gz)\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		目前<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>的下载地址是http://redmine.lighttpd<a href="http://www.zts1993.com/category/code/net/">.net</a>/projects/<a href="http://www.zts1993.com/tag/spawn-fcgi/">spawn-fcgi</a>，最新版本是http://www.lighttpd<a href="http://www.zts1993.com/category/code/net/">.net</a>/download/<a href="http://www.zts1993.com/tag/spawn-fcgi/">spawn-fcgi</a>-1.6.3.tar.gz\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		注：最新的<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>可以到lighttpd<a href="http://www.zts1993.com/category/code/net/">.net</a>网站搜索“<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>”找到它的最新版本发布地址\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		下面我们就可以使用<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>来控制<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>的<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>进程了\r\n	</p>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n	</div>\r\n	<div style="color:#444444;font-size:12.727272033691406px;background-color:#FFFFFF;">\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n<pre>1</pre>\r\n					</td>\r\n					<td>\r\n<pre>    /usr/local/bin/<a href="http://www.zts1993.com/tag/spawn-fcgi/">spawn-fcgi</a> -a 127.0.0.1 -p 9000 -C 5 -u www-data -g www-data -f /usr/bin/<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a></pre>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		参数含义如下:\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		-f&nbsp;指定调用<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>的进程的执行程序位置，根据系统上所装的PHP的情况具体设置<br />\r\n-a&nbsp;绑定到地址addr<br />\r\n-p&nbsp;绑定到端口port<br />\r\n-s&nbsp;绑定到unix socket的路径path<br />\r\n-C&nbsp;指定产生的<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>的进程数，默认为5(仅用于PHP)<br />\r\n-P&nbsp;指定产生的进程的PID文件路径<br />\r\n-u和-g&nbsp;<a href="http://www.zts1993.com/tag/fastcgi/" target="_blank">FastCGI</a>使用什么身份(-u 用户 -g 用户组)运行，<a href="http://www.zts1993.com/category/os/linux/ubuntu-linux/">Ubuntu</a>下可以使用www-data，其他的根据情况配置，如nobody、apache等\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>PHP-FPM与spawn-<a href="http://www.zts1993.com/tag/cgi/" target="_blank">CGI</a>对比测试</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP-FPM的使用非常方便,配置都是在PHP-FPM.ini的文件内，而启动、重启都可以从<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>/sbin/PHP-FPM中进行。更方便的是修改<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>.ini后可以直接使用PHP-FPM reload进行加载，无需杀掉进程就可以完成<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>.ini的修改加载<br />\r\n结果显示使用PHP-FPM可以使<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>有不小的性能提升。PHP-FPM控制的进程cpu回收的速度比较慢,内存分配的很均匀。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>控制的进程CPU下降的很快,而内存分配的比较不均匀。有很多进程似乎未分配到,而另外一些却占用很高。可能是由于进程任务分配的不均匀导致的.而这也导致了总体响应速度的下降。而PHP-FPM合理的分配，导致总体响应的提到以及任务的平均。\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		<strong>PHP-FPM与<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>功能比较</strong>\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		http://<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-fpm.org/about/\r\n	</p>\r\n	<p style="color:#444444;font-size:12.727272033691406px;">\r\n		PHP-FPM、<a href="http://www.zts1993.com/tag/spawn-fcgi/" target="_blank">Spawn-FCGI</a>都是守护<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>-cgi的进程管理器。\r\n	</p>\r\n</h1>', '2012-10-10'),
(2, 5, 0, 'Windows 8快速开机(Hybrid Boot功能)详解', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	有多少人曾沉迷于开机速度击败了多少用户，然后对系统进行各种优化设置提高启动速度。如果你在使用<a href="http://www.zts1993.com/category/os/windows/">Windows</a>&nbsp;8消费者预览版，会发现开机速度快了不少。其实这是<a href="http://www.zts1993.com/tag/hybrid-boot/" target="_blank">Hybrid Boot</a>功能。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	如果是冷启动，意味之前切断电源后内存中的信息全部丢失，连接电源后重新检测硬件，启动操作系统（先要从硬盘读取数据到内存），然后用户登录进入桌面前启动相应的服务以及加载自启动程序。重启电脑就属于冷启动，在即插即用设备流行之前，很多硬件在安装后需要重启电脑也是因为需要重新检测硬件。这种方式最为原始，耗时也最长。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	后来出现了睡眠和休眠，这两个名称看起来差不多，其实了解了它们的工作方式之后就很容易区分开。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	睡眠：指的是在此状态下除了内存保持供电外，像CPU、硬盘这种硬件不再供电，唤醒时从内存中读取数据恢复到睡眠前的工作状态。这样免去了检测硬件，从硬盘读取数据等步骤，所以恢复工作状态所花费的时间是最短的。缺点是在睡眠时一旦断电，内存的数据全部丢失，其他硬件又没有供电，再开机的话相当于冷启动。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	休眠：指的是在此状态下内存中的数据被存储到硬盘的一个文件(hiberfil.sys)中，当再次启动时，将之前存储的内存数据从硬盘直接读取到内存中，这种方式启动的速度比睡眠稍慢，但是比冷启动要快，而且休眠时不需要耗电。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	这样看起来睡眠就像每天晚上困了，需要休息，第二天早起会醒；而休眠更像是科幻片中的星际旅行时的休眠，或者是动物的冬眠，是一个相对于睡眠更加惰性的状态。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/category/os/windows/">Windows</a>&nbsp;8的快速开机实际上就是使用了休眠的原理，但是又和以往的休眠有所不同，在<a href="http://www.zts1993.com/category/os/windows/">Windows</a>&nbsp;8中的关机是一种特殊的休眠，它将内存中系统内核的数据存储在硬盘中，而关闭了用户对话。这样的好处是下次启动系统时可以提高速度，又不必因为保存了大量的用户对话而占用很多的硬盘空间。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	很多文章中说<a href="http://www.zts1993.com/category/os/windows/windows8-windows/">Windows8</a>&nbsp;的<a href="http://www.zts1993.com/tag/hybrid-boot/" target="_blank">Hybrid Boot</a>功能在关机时将内存中系统内核的数据存储在硬盘中提高启动速度，我觉得不对，。我第一天晚上开启<a href="http://www.zts1993.com/category/code/oracle-code/">oracle</a>和wamp，关机后第二天早上起来开机之后，<a href="http://www.zts1993.com/category/code/oracle-code/">oracle</a>和wamp（不是自动启动项）竟然是可用的。所以我觉得<a href="http://www.zts1993.com/category/os/windows/windows8-windows/">Windows8</a>&nbsp;应该是将绝大多数（也可能是全部）服务进程进行了存储而不是仅仅系统内核的数据。\r\n</p>', '2012-10-10'),
(29, 6, 0, '江苏南京华硕笔记本售后服务', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	江苏南京华硕笔记本售后服务\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<ul style="color:#444444;font-size:12.727272033691406px;">\r\n	<li>\r\n		<h3 style="color:#111111;font-size:14px;">\r\n			华硕服务中心\r\n		</h3>\r\n		<p>\r\n			电话：025-66980016\r\n		</p>\r\n		<p>\r\n			地址：南京市玄武区珠江路67号(华利国际北门17楼1710室)\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<h3 style="color:#111111;font-size:14px;">\r\n			华硕服务中心\r\n		</h3>\r\n		<p>\r\n			电话：025-85018851/ 85018852\r\n		</p>\r\n		<p>\r\n			地址：南京市珠江路648号南京数码港02栋（东面）15楼15F-B室\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<h3 style="color:#111111;font-size:14px;">\r\n			华硕服务中心\r\n		</h3>\r\n		<p>\r\n			电话：025-83197208/ 83197261/ 83197262\r\n		</p>\r\n		<p>\r\n			地址：南京市玄武区大石桥29号虹飞大厦4045室\r\n		</p>\r\n		<p>\r\n			&nbsp;\r\n		</p>\r\n		<p>\r\n			&nbsp;\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0512-52925206\r\n				</p>\r\n				<p>\r\n					地址：常熟市海虞北路39号友通数码港(A1068号)\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0519-86660165\r\n				</p>\r\n				<p>\r\n					地址：常州钟楼区广化街20号丰臣海悦广场1106\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0512-57997910\r\n				</p>\r\n				<p>\r\n					地址：昆山市潭子街37号\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0512-50111812\r\n				</p>\r\n				<p>\r\n					地址：昆山市花桥镇花安路183号赛格电子市场 IF12\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0518-85811488\r\n				</p>\r\n				<p>\r\n					地址：连云港市新浦区苍梧路数字旗美三楼C023\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：025-66980016\r\n				</p>\r\n				<p>\r\n					地址：南京市玄武区珠江路67号(华利国际北门17楼1710室)\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：025-85018851/ 85018852\r\n				</p>\r\n				<p>\r\n					地址：南京市珠江路648号南京数码港02栋（东面）15楼15F-B室\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：025-83197208/ 83197261/ 83197262\r\n				</p>\r\n				<p>\r\n					地址：南京市玄武区大石桥29号虹飞大厦4045室\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0513-85511808\r\n				</p>\r\n				<p>\r\n					地址：南通市姚港路6号方天大厦5楼502室\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<h3 style="color:#111111;font-size:14px;">\r\n					华硕服务中心\r\n				</h3>\r\n				<p>\r\n					电话：0527-84382223\r\n				</p>\r\n				<p>\r\n					地址：宿迁市发展大道88号数码广场A103-2\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<ul>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0512-65220842/0641\r\n						</p>\r\n						<p>\r\n							地址：苏州市干将东路879号瑞基大厦B座402室\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0512-65211502/ 65211505\r\n						</p>\r\n						<p>\r\n							地址：苏州市干将西路515号佳福国际大厦604室\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0523-86210515\r\n						</p>\r\n						<p>\r\n							地址：江苏泰州市海陵区太平洋电脑通讯广场一楼A8座\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0510-82796583\r\n						</p>\r\n						<p>\r\n							地址：无锡市人民西路45号金惠大厦1728和1704室\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0516-83109728\r\n						</p>\r\n						<p>\r\n							地址：徐州市青年路皇城大厦A座725室\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0515-89917388\r\n						</p>\r\n						<p>\r\n							地址：盐城市亭湖区后关西路悦达都市花园1幢104\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0514-87939093\r\n						</p>\r\n						<p>\r\n							地址：扬州市文昌中路372号堡尼大厦5楼511室（银河电子城马路对面，宏图三胞楼上）\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0514-88919567\r\n						</p>\r\n						<p>\r\n							地址：江苏省扬州市宝应县安宜东路21号\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0511-88970811\r\n						</p>\r\n						<p>\r\n							地址：镇江市润州区数码港A区-5号\r\n						</p>\r\n					</li>\r\n					<li>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0511-85241120\r\n						</p>\r\n						<p>\r\n							地址：镇江市健康路48-5号\r\n						</p>\r\n						<h3 style="color:#111111;font-size:14px;">\r\n							华硕服务中心\r\n						</h3>\r\n						<p>\r\n							电话：0517-87080182/ 83905919\r\n						</p>\r\n						<p>\r\n							地址：淮安市淮海南路2号水门桥华成大厦608室\r\n						</p>\r\n					</li>\r\n				</ul>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>', '2012-10-10'),
(8, 7, 0, '自动加"解决方案', '', '', '<h2 style="color:#111111;font-size:15px;">\r\n	php.ini关闭&nbsp;单引号、双引号&nbsp;自动转义\r\n</h2>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	PHP页面中如果不希望出现以下情况:<br />\r\n单引号被转义为 ''<br />\r\n双引号被转义为 "<br />\r\n那么可以进行如下设置以防止:<br />\r\n方法一:在php.ini中设置:magic_quotes_gpc&nbsp;= Off<br />\r\n方法二: $str=stripcslashes($str)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	所以自动加&amp;quot;只要在php.ini中设置:magic_quotes_gpc&nbsp;= Off\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	PS:你很有可能使用了军哥的LNMP&nbsp;PHP配置文件：/usr/local/php/etc/php.ini\r\n</p>', '2012-10-10'),
(62, 8, 0, 'win8：system和服务主机：本地系统（网络受限）进程占用CPU超高，硬盘读取占用到100%', '', '', '<pre>1.家庭组问题\r\n这个原因未知。可能是个win8的bug\r\n解决方法：屏幕右下角任务栏，右键点击网络图标，打开网络和共享中心，链接图标上有个家庭组，点击退出就可以了\r\n2.磁盘优化计划\r\n这个计划是默认开启的，当运行磁盘优化的时候，活动100%是正常的。这个可以不关闭。定期优化可以保持系统的稳定性和速度。\r\n如果你想手动来做，可以这样做。\r\n打开计算机，任意磁盘右键打开属性-&gt;工具-&gt;优化-&gt;关闭优化计划\r\n3.readyboost\r\n当是用U盘或者移动硬盘作为ReadyBoost时会造成100%情况，这是因为磁盘在和缓存区域进行数据交换，当这个过程完成，磁盘占用就会恢复，不过这个过程较长，不知道这是bug还是怎么回事。win7下不会出现这个问题，Win8下存在\r\n解决办法：不使用Readyboost设备。。。无奈啊。。不过内存这么大的年代。也不存在那点缓存了。</pre>', '2012-10-10'),
(19, 9, 0, 'Linux查看硬件和系统信息命令汇总', '', '', '<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # uname –a # 查看内核/操作系统/CPU信息的</span><a href="http://www.zts1993.com/category/os/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统信息命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # head -n 1 /etc/issue # 查看操作系统版本，是数字1不是字母L</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/cpuinfo # 查看CPU信息的</span><a href="http://www.zts1993.com/category/os/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统信息命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # hostname # 查看计算机名的</span><a href="http://www.zts1993.com/category/os/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统信息命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # lspci -tv # 列出所有PCI设备</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # lsusb -tv # 列出所有USB设备的</span><a href="http://www.zts1993.com/category/os/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统信息命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # lsmod # 列出加载的内核模块</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # env # 查看环境变量资源</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # free -m # 查看内存使用量和交换区使用量</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # df -h # 查看各分区使用情况</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # du -sh # 查看指定目录的大小</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # grep MemTotal /proc/meminfo # 查看内存总量</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # grep MemFree /proc/meminfo # 查看空闲内存量</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # uptime # 查看系统运行时间、用户数、负载</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/loadavg # 查看系统负载磁盘和分区</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # mount | column -t # 查看挂接的分区状态</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # fdisk -l # 查看所有分区</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # swapon -s # 查看所有交换分区</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # dmesg | grep IDE # 查看启动时IDE设备检测状况网络</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # ifconfig # 查看所有网络接口的属性</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # iptables -L # 查看防火墙设置</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # route -n # 查看路由表</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # netstat -lntp # 查看所有监听端口</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # netstat -antp # 查看所有已经建立的连接</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # netstat -s # 查看网络统计信息进程</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # ps -ef # 查看所有进程</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # top # 实时显示进程状态用户</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # w # 查看活动用户</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # id # 查看指定用户信息</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # last # 查看用户登录日志</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cut -d: -f1 /etc/passwd # 查看系统所有用户</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cut -d: -f1 /etc/group # 查看系统所有组</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # crontab -l # 查看当前用户的计划任务服务</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # chkconfig –list # 列出所有系统服务</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # chkconfig –list | grep on # 列出所有启动的系统服务程序</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # rpm -qa # 查看所有安装的软件包</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/cpuinfo # 查看CPU相关参数的</span><a href="http://www.zts1993.com/category/os/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/partitions # 查看</span><a href="http://www.zts1993.com/tag/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">硬盘和分区信息的系统信息命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/meminfo # 查看</span><a href="http://www.zts1993.com/tag/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统内存信息的</span><a href="http://www.zts1993.com/tag/linux/">linux</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">系统命令</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/version # 查看版本，类似uname -r</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/ioports # 查看设备io端口</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/interrupts # 查看中断</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/pci # 查看pci设备的信息</span><br />\r\n<span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">[root@ztsblog ~] # cat /proc/swaps # 查看所有</span><a href="http://www.zts1993.com/tag/swap/">swap</a><span style="color:#444444;font-size:12.727272033691406px;line-height:24px;">分区的信息</span>', '2012-10-10');
INSERT INTO `posts` (`post_hits`, `ID`, `post_author`, `post_title`, `post_status`, `comment_status`, `post_content`, `time`) VALUES
(246, 10, 0, 'Linux开机流程', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong><a href="http://www.zts1993.com/category/os/linux/">linux</a>的基础启动流程</strong><br />\r\n1. 加载BIOS的硬件信息，并获取第一个启动设备的代号。<br />\r\n2. 读取第一个启动设备的MBR的引导加载程序（即lilo、grub、spfdisk等）的启动信息。<br />\r\n3. 加载操作系统的核心信息，核心开始解压，并尝试驱动所有的硬件设备。<br />\r\n4. 核心执行init程序并获得运行信息。<br />\r\n5. init执行/etc/rc.d/rc.sysinit文件。<br />\r\n6. 启动核心的外挂模块（/etc/modprobe.conf）。<br />\r\n7. init执行运行的各个批处理文件（Script）<br />\r\n8. init执行/etc/rc.d/rc.local文件。<br />\r\n9. 执行/bin/login程序，等待用户登录。<br />\r\n10. 登录之后开始以shell控制主机。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>1.&nbsp;<a href="http://www.zts1993.com/category/os/linux/">linux</a>核心的引导</strong><br />\r\n操 作系统的核心是放在文件系统中的，要想正确加载核心就必须提前识别文件系统。系统刚启动的时候，就需要通过引导加载程序（即lilo、grub、 spfdisk等）来识别文件系统，引导核心。要想加载<a href="http://www.zts1993.com/category/os/linux/">linux</a>的核心就必须能识别<a href="http://www.zts1993.com/category/os/linux/">linux</a>的文件系统，要加载<a href="http://www.zts1993.com/category/os/windows/">windows</a>核心就必须能识别&nbsp;<a href="http://www.zts1993.com/category/os/windows/">windows</a>文件系统。而grub是同时支持<a href="http://www.zts1993.com/category/os/linux/">linux</a>和<a href="http://www.zts1993.com/category/os/windows/">windows</a>的。但<a href="http://www.zts1993.com/category/os/windows/">windows</a>的加载程序并不支持<a href="http://www.zts1993.com/tag/linux/">linux</a>文件系统，所以在多重启动设 置的时候，总是要先装<a href="http://www.zts1993.com/category/os/windows/">windows</a>而后装<a href="http://www.zts1993.com/tag/linux/">Linux</a>。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	核心文件在哪里呢？一般来说，它会放在/boot里，并且取名为/boot/vmlinuz。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	在 加载核心的过程中，必须知道，系统只会“载入根目录”，并且是以只读方式载入的。有时为了让某些功能可以用文件的方法来读取，有的系统在启动的时，会建立 虚拟盘（ramdisk），这就需要使用initrd以及linuxrc了。在加载核心的时候，一起加载initrd的映像文件 （boot/initrd-xxxx.img），并利用linuxrc（在initrd的映像文件内）程序来加载模块。在核心驱动外部硬件的工作完成之 后，initrd所建立的虚拟盘就会被删除。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>2. 第一个程序init的加载和runlevel设置</strong><br />\r\n在 核心加载完成之后，系统就准备好了，等待程序的执行。整个<a href="http://www.zts1993.com/tag/linux/">linux</a>系统中，第一个执行的程序就是“/sbin/init”。init程序做的工作相当 多，除了利用设置文件“/etc/inittab”来获取运行等级之外，还会通过运行等级的设置值启动不同的服务项目。运行等级是指<a href="http://www.zts1993.com/tag/linux/">linux</a>通过设置不 同等级来规定系统用不同的服务来启动，让<a href="http://www.zts1993.com/tag/linux/">linux</a>的使用环境不同。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	“/etc/inittab”中有这么一句”si::sysinit:/etc/rc.d/rc.sysinit”，表明系统需要主动使用”rc.sysinit”这个shell脚本来设置系统环境。但这个文件的文件名在各个版本中是不一样的，需要自行查看确认。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>3. init处理系统的初始化流程（/etc/rc.d/rc.sysinit）<br />\r\n</strong>（1）获取网络环境与主机类型。首先会读取网络环境设置文件”/etc/sysconfig/network”，获取主机名称与默认网关等网络环境。<br />\r\n（2）测试与载入内存设备/proc及usb设备/sys。除了/proc外，系统会主动检测是否有usb设备，并主动加载usb驱动，尝试载入usb文件系统。<br />\r\n（3）决定是否启动SELinux。<br />\r\n（4）接口设备的检测与即插即用（pnp）参数的测试。<br />\r\n（5）用户自定义模块的加载。用户可以再”/etc/sysconfig/modules/*.modules”加入自定义的模块，此时会加载到系统中。<br />\r\n（6）加载核心的相关设置。又一个文件”/etc/sysctl.conf”，按这个文件的设置值配置功能。<br />\r\n（7）设置系统时间（clock）。<br />\r\n（8）设置终端的控制台的字形。<br />\r\n（9）设置raid及LVM等硬盘功能。<br />\r\n（10）以方式查看检验磁盘文件系统。<br />\r\n（11）进行磁盘配额quota的转换。<br />\r\n（12）重新以读取模式载入系统磁盘。<br />\r\n（13）启动quota功能。<br />\r\n（14）启动系统随机数设备（产生随机数功能）。<br />\r\n（15）清楚启动过程中的临时文件。<br />\r\n（16）将启动信息加载到”/var/log/dmesg”文件中。<br />\r\n如果想知道启动过程中发生了什么事可以查看dmesg文件。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>4. 启动系统服务”/etc/rc.d/rc*.d”与启动设置文件”/etc/sysconfig”</strong><br />\r\n之 前结束了inittab中的rc.sysinit之后，系统可以顺利工作了，只是还需要启动系统所需要的各种服务，这样主机才可以提供相关的网络和主机功 能。因此根据之前设置的运行等级，会启动不同的服务项目。如果当时我们在inittab中选择了等级3，系统则会在”/etc/rc.d/rc3.d”目 录中运行相应的服务内容，选择等级5，就在”/etc/rc.d/rc5.d”目录内。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	该目录下的内容全部都是以 S 或 K 开头的链接文件，都链接到”/etc/rc.d/init.d”目录下的各种shell脚本。S表示的是启动时需要start的服务内容，K表示关机时需 要关闭的服务内容。如果我们需要自己增加启动的内容，可以再init.d目录中增加相关的shell脚本，然后在rc*.d目录中建立链接文件指向该 shell脚本。这些shell脚本的启动或结束顺序是由S或K字母后面的数字决定，例如S01sysstat表示第一个执行sysstat脚 本，S99local表示排在第99位执行rc.local脚本。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>5. 用户自定义引导程序（/etc/rc.d/rc.local）</strong><br />\r\n一般来说，自定义的程序不需要执行上面所说的繁琐的建立shell增加链接文件的步骤，只需要将命令放在rc.local里面就可以了，这个shell脚本就是保留给用户自定义启动内容的。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>6. 启动终端和X-Window界面</strong><br />\r\n完成了系统所有的启动任务后，linux会启动终端或X-Window来等待用户登录。<br />\r\ntty1,tty2,tty3…这表示在运行等级1，2，3，4的时候，都会执行”/sbin/mingetty”，而且执行了6个，所以linux会有6个纯文本终端，mingetty就是启动终端的命令。<br />\r\n除了这6个之外还会执行”/etc/X11/prefdm -nodaemon”这个主要启动X-Window\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>7. 有关变换运行等级<br />\r\n</strong>当linux已经登录之后，有时候还希望更换运行等级，一种方法是改变”/etc/inittab”内的设置内容，将”id:3:initdefault:”中的数字改成相应等级，然后重启即可。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	如 果只是想暂时地改变运行等级，下次启动还是按原等级登录，可以直接使用init [0-6]命令来改变运行等级。一般来说，运行等级的不同只是相关的启动服务内容的不同而已，因此使用命令改变等级会比较两个改变等级之间的服务内容，关 闭一些新等级中不需要的服务项目，启动新等级需要的服务，而保量新等级和原等级中共有的服务内容。查询目前等级的命令也很简单，只需要输入 runlevel即可。如：[root@linux ~]# runlevel&nbsp; 结果显示：N 3\r\n</p>', '2012-10-10'),
(55, 11, 0, 'MAPn 3.1是什么?', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	MAPn 是一个用于&nbsp;<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>(CentOS/RedHat/<a href="http://www.zts1993.com/category/os/linux/debian/">Debian</a>/<a href="http://www.zts1993.com/category/os/linux/ubuntu-linux/">Ubuntu</a>) 系统的服务环境自动编译程序，具有 MAP(lamp) &amp; MAPn(lnamp) 模式并可随意切换；<br />\r\nMAPn 是以 MySQL + Apache + PHP +&nbsp;<a href="http://www.zts1993.com/tag/nginx/">Nginx</a>(可选) 的安装顺序命名；<br />\r\nMAPn 默认安装为 MAP 模式，选择 MAP+n 模式将以&nbsp;<a href="http://www.zts1993.com/tag/nginx/">Nginx</a>&nbsp;作为服务器前端运行，Apache 作为服务器后端运行。<br />\r\n版本：v3.1 正式版 &nbsp;| &nbsp;发布日期：2011-10-29\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【包含程序】</strong><br />\r\n默认安装：MySQL、Apache、PHP、<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>MyAdmin<br />\r\n可选安装：<a href="http://www.zts1993.com/tag/nginx/">Nginx</a>、eAccelerator、Zend Optimizer、ionCube、PureFTPd、Suhosin、Memcached、<a href="http://www.zts1993.com/category/google/">google</a>-perftools (可选安装程序可在 MAPn 主安装完成后于 extras.sh 选择安装)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【附加程序安装说明】</strong><br />\r\n当您选择安装&nbsp;<a href="http://www.zts1993.com/tag/nginx/">Nginx</a>，则是以 MAP+n 模式运行，当您卸载&nbsp;<a href="http://www.zts1993.com/tag/nginx/">Nginx</a>，则是以 MAP 模式运行，切换模式时 MAPn 会自动处理所有有关配置文件；<br />\r\n可选安装程序可在 extras.sh 选择安装，当您安装某个程序后则其不在安装列表显示，转而显示在 unextras.sh 卸载脚本中，如果没有安装的程序则不会在 unextras.sh 中显示，反之，可选程序卸载后会恢复在 extras.sh 列表显示；<br />\r\n附加(可选)程序可无限制安装与卸载。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【自定义版本说明】</strong><br />\r\n默认版本号为 MySQL-5.1.59、Apache-2.2.21、PHP-5.2.17、Nginx-1.0.8、eAccelerator-0.9.5.3、<a href="http://www.zts1993.com/tag/php-2/" target="_blank">php</a>MyAdmin-3.4.7、Memcached-1.4.7；<br />\r\n如需安装其它版本号程序，可在安装时选择自定义版本号，注意正确填写版本号格式并确认其版本是存在的(<a target="_blank" href="http://www.zts1993.com/zts1993/http://sourceforge.net/projects/mapn/files/source/">确认链接</a>)；<br />\r\n关于 PHP5.3 系列版本，MAPn 会自动识别您输入的版本号，如果为 PHP5.3 系列版本号，则以 PHP5.3 系列版本的编译方式编译，并在后续的 Zend Optimizer 将会自动安装为 Zend Guard Loader，同因 PHP5.3 系列版本不兼容 eAccelerator0.9.5 系列版本，所以当您选择了 PHP5.3 系列版本，MAPn 则自动将 eAccelerator 的自定义版本隐藏并安装为 0.9.6.1 版本；<br />\r\nMySQL 暂不支持 5.5 系列；<br />\r\nApache 暂只支持 2.2 系列；<br />\r\n更多程序版本支持将在 MAPn 后续版本支持。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【升级说明】</strong><br />\r\nMAPn 3.1 正式版仅支持由 MAPn 3.1 测试版升级，后续版本也将仅支持由 MAPn 3.1 测试版与后续版本升级，直接运行主安装，MAPn 会提醒您是否进行升级，升级时 MAPn 会自动处理数据库等配置文件，但仍建议您升级前做好数据备份；<br />\r\n运行 upgrade.sh 可进行 MySQL、Apache、PHP、Nginx 升级/降级，由于考虑到降级等原因，此脚本的原理是将您选择的程序卸载再进行安装，MAPn 会自动处理您的数据，但仍建议您升级前做好数据备份；\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【更新说明】</strong>\r\n</p>\r\n<ul style="color:#444444;font-size:12.727272033691406px;">\r\n	<li>\r\n		增加 FTP(PureFTPd) 支持，配有 FTP 用户增加、修改、删除等操作管理脚本；\r\n	</li>\r\n	<li>\r\n		增加 MAPn 主升级功能；\r\n	</li>\r\n	<li>\r\n		增加 MySQL、Apache、PHP、Nginx 升降级功能；\r\n	</li>\r\n	<li>\r\n		增加附加程序安装与卸载脚本；\r\n	</li>\r\n	<li>\r\n		增加 Memcached、<a href="http://www.zts1993.com/category/google/">google</a>-perftools 程序为可选安装；\r\n	</li>\r\n	<li>\r\n		增加 PHP5.3 系列版本支持；\r\n	</li>\r\n	<li>\r\n		修正部分系统模板获取不到主机名导致 Apache 无法启动的问题；\r\n	</li>\r\n	<li>\r\n		修正部分 Ubuntu11 系统模板安装 PHP 错误的问题；\r\n	</li>\r\n	<li>\r\n		修正因 PHP 编译参数导致个别 PHP 代码不兼容的问题；\r\n	</li>\r\n	<li>\r\n		修改虚拟主机配置文件路径为 /usr/local/mapn/vhosts/；\r\n	</li>\r\n	<li>\r\n		修改 Suhosin(PHP守护神) 为可选安装；\r\n	</li>\r\n	<li>\r\n		优化 MAP 与 MAP+n 模式的完美切换；\r\n	</li>\r\n	<li>\r\n		优化添加虚拟机脚本的处理方式；\r\n	</li>\r\n	<li>\r\n		优化安装完成 MySQL 后删除多余的空密码账户；\r\n	</li>\r\n	<li>\r\n		等等诸多优化更新。\r\n	</li>\r\n</ul>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【安装说明】</strong><br />\r\n快速开始安装(自动版)：\r\n</p>\r\n<pre>wget http://www.notago.com/mapn.sh;sh mapn.sh</pre>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	执行后选择 1 为下载版，选择 2 为完整版(推荐)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	手动版(与自动版任选其一)：<br />\r\n下载版：\r\n</p>\r\n<pre>wget http://sourceforge<a href="http://www.zts1993.com/category/code/net/">.net</a>/projects/mapn/files/stable/ngro-mapn-3.1.tar.gz (下载安装文件)\r\ntar -zxvf ngro-mapn-3.1.tar.gz (解压安装文件)\r\ncd ngro-mapn-3.1/ (进入工作目录)\r\n./centos.sh (执行安装，适用于 CentOS/RedHat )\r\n./<a href="http://www.zts1993.com/category/os/linux/debian/">debian</a>.sh (执行安装，适用于 <a href="http://www.zts1993.com/category/os/linux/debian/">Debian</a>/<a href="http://www.zts1993.com/category/os/linux/ubuntu-linux/">Ubuntu</a> )</pre>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	完整版：\r\n</p>\r\n<pre>wget -c http://sourceforge<a href="http://www.zts1993.com/category/code/net/">.net</a>/projects/mapn/files/stable/ngro-mapn-3.1-full.tar.gz\r\ntar -zxvf ngro-mapn-3.1-full.tar.gz\r\ncd ngro-mapn-3.1/\r\n./centos.sh\r\n./<a href="http://www.zts1993.com/category/os/linux/debian/">debian</a>.sh</pre>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	下载提示：<br />\r\nMAPn 项目主要托管于 SourceForge<a href="http://www.zts1993.com/category/code/net/">.net</a>，部分中国内服务商屏蔽了 SourceForge<a href="http://www.zts1993.com/category/code/net/">.net</a>，导致无法下载等问题，当您的服务器访问不了 SourceForge，请下载托管于谷歌项目的完整版，或者下载 Notago.com 本地完整版；\r\n</p>\r\n<pre>wget -c http://mapn.googlecode.com/files/ngro-mapn-3.1-full.tar.gz (<a href="http://www.zts1993.com/category/google/">Google</a>)\r\nwget -c http://download.notago.com/mapn/ngro-mapn-3.1-full.tar.gz (Notago)</pre>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【使用说明】</strong><br />\r\n主安装完成后，如您需安装更多程序支持，可执行 extras.sh 选择进行安装，如需卸载可选程序，可执行 unextras.sh 选择进行卸载；<br />\r\n主安装完成后，如您需升降级 MySQL、Apache、PHP、Nginx，可执行 upgrade.sh 选择进行升降级；<br />\r\n状态管理：启动：<strong>mapn start</strong>&nbsp;| 停止：<strong>mapn stop</strong>&nbsp;| 重启：<strong>mapn restart</strong>&nbsp;| 强制停止：<strong>mapn kill</strong>&nbsp;；<br />\r\n虚拟主机管理：添加：mapn adv | 删除：mapn rmv ；<br />\r\nFTP 管理程序：mapn ftp (具有启动、停止、重启，添加用户、修改用户、删除用户)；<br />\r\n如您需重新安装 MAPn，可直接执行主安装(centos.sh|<a href="http://www.zts1993.com/category/os/linux/debian/">debian</a>.sh)，MAPn 会询问您是否升级，选择 Y/y 即可；<br />\r\n如您需卸载 MAPn，可执行 uninstall.sh 进行彻底卸载，请特别注意先备份好您的数据。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>【特别说明】</strong><br />\r\nMAPn 开放源代码，无任何加密，无任何后门，所有程序均采用官方源文件，您可查询 MD5 值进行对比；<br />\r\nMAPn 所有选单的 ( Y/n ) 均不区分大小写，输入大小写都可；\r\n</p>', '2012-10-10'),
(116, 12, 0, '纯脚本备份VPS数据到Dropbox', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/vps/" target="_blank">VPS</a>这个东西，灰狼怎么都不放心存在里面的数据，总觉得虚拟主机要比<a href="http://www.zts1993.com/tag/vps/" target="_blank">VPS</a>做站来得可靠。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	这个脚本不用安装dropbox的客户端，省资源，\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<pre>  #!/bin/bash\r\n    DROPBOX_USER="dropbox邮箱帐号"\r\n    DROPBOX_PASS="dropbox密码"\r\n    #dropbox上传目录 默认是<a href="http://www.zts1993.com/tag/backup/">backup</a>文件夹\r\n    DROPBOX_DIR="/<a href="http://www.zts1993.com/tag/backup/">backup</a>"\r\n    #要备份的文件路径\r\n    BACKUP_SRC="/www/web /root多个目录用空格隔开"\r\n    #临时目录\r\n    BACKUP_DST="/tmp"\r\n    MYSQL_SERVER="localhost"\r\n    #<a href="http://www.zts1993.com/tag/mysql/">mysql</a>用户名\r\n    MYSQL_USER="root"\r\n    #<a href="http://www.zts1993.com/tag/mysql/">mysql</a>用户密码\r\n    MYSQL_PASS="Your <a href="http://www.zts1993.com/tag/mysql/">MySQL</a> password"\r\n\r\n    # based on http://davehope.co.uk/<a href="http://www.zts1993.com/tag/blog/">Blog</a>/<a href="http://www.zts1993.com/tag/backup/">backup</a>-your-<a href="http://www.zts1993.com/category/os/linux/">linux</a>-vps-to-dropbox/ \r\n    # based on https://github.com/andreafabrizi/Dropbox-Uploader\r\n    NOW=$(date +"%Y.%m.%d")\r\n    DESTFILE="$BACKUP_DST/$NOW.tgz"\r\n\r\n    #\r\n    # Upload a file to Dropbox.\r\n    # $1 = Source file\r\n    # $2 = Destination file.\r\n    function dropboxUpload\r\n    {\r\n            #\r\n            # <a href="http://www.zts1993.com/tag/code-2/">Code</a> based on DropBox Uploader 0.6 from http://www.andreafabrizi.it/?dropbox_uploader\r\n            LOGIN_URL="https://www.dropbox.com/login"\r\n            HOME_URL="https://www.dropbox.com/home"\r\n            UPLOAD_URL="https://dl-web.dropbox.com/upload"\r\n            COOKIE_FILE="/tmp/du_cookie_$RANDOM"\r\n            RESPONSE_FILE="/tmp/du_resp_$RANDOM"\r\n\r\n        UPLOAD_FILE=$1\r\n        DEST_FOLDER=$2\r\n\r\n            # Login\r\n            echo -ne " &gt; Logging in..."\r\n            curl -s -i -c $COOKIE_FILE -o $RESPONSE_FILE --data "login_email=$DROPBOX_USER&amp;login_password=$DROPBOX_PASS&amp;t=$TOKEN" "$LOGIN_URL"\r\n            grep "location: /home" $RESPONSE_FILE &gt; /dev/null\r\n\r\n            if [ $? -ne 0 ]; then\r\n                    echo -e " Failed!"\r\n                    rm -f "$COOKIE_FILE" "$RESPONSE_FILE"\r\n                    exit 1\r\n            else\r\n                    echo -e " OK"\r\n            fi\r\n\r\n            # Load home page\r\n            echo -ne " &gt; Loading Home..."\r\n            curl -s -i -b "$COOKIE_FILE" -o "$RESPONSE_FILE" "$HOME_URL"\r\n\r\n            if [ $? -ne 0 ]; then\r\n                    echo -e " Failed!"\r\n                    rm -f "$COOKIE_FILE" "$RESPONSE_FILE"\r\n                    exit 1\r\n            else\r\n                    echo -e " OK"\r\n            fi\r\n\r\n            # Get token\r\n            TOKEN=$(cat "$RESPONSE_FILE" | tr -d ''n'' | sed ''s/.*&lt;form action="https://dl-web.dropbox.com/upload"[^&gt;]*&gt;s*&lt;input type="hidden" name="t" value="([a-z 0-9]*)".*/1/'')\r\n\r\n            # Upload file\r\n            echo -ne " &gt; Uploading ''$UPLOAD_FILE'' to ''DROPBOX$DEST_FOLDER/''..."\r\n        curl -s -i -b $COOKIE_FILE -o $RESPONSE_FILE -F "plain=yes" -F "dest=$DEST_FOLDER" -F "t=$TOKEN" -F "file=@$UPLOAD_FILE"  "$UPLOAD_URL"\r\n        grep "HTTP/1.1 302 FOUND" "$RESPONSE_FILE" &gt; /dev/null\r\n\r\n        if [ $? -ne 0 ]; then\r\n            echo -e " Failed!"\r\n                    rm -f "$COOKIE_FILE" "$RESPONSE_FILE"\r\n            exit 1\r\n        else\r\n            echo -e " OK"\r\n                    rm -f "$COOKIE_FILE" "$RESPONSE_FILE"\r\n        fi\r\n    }\r\n\r\n    #<a href="http://www.zts1993.com/tag/mysql/">mysql</a>数据库备份\r\n    mysqldump -u $MYSQL_USER -h $MYSQL_SERVER -p$MYSQL_PASS --all-databases &gt; "$NOW-Databases.sql"\r\n    #压缩\r\n    tar cfz "$DESTFILE" $BACKUP_SRC "$NOW-Databases.sql"\r\n    #上传\r\n    dropboxUpload "$DESTFILE" "$DROPBOX_DIR"\r\n\r\n    rm -f "$NOW-Databases.sql" "$DESTFILE"</pre>', '2012-10-10'),
(214, 13, 0, 'Linux 内存机制原理物理内存,Cache化,Buffer,Swap关系', '', '', '<h1 style="color:#444444;">\r\n	一. 内存使用说明\r\n</h1>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Free 命令相对于top 提供了更简洁的查看系统内存使用情况：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	[root@rac1 ~]# free\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; shared&nbsp;&nbsp;&nbsp; buffers&nbsp;&nbsp;&nbsp;&nbsp; cached\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Mem:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1035108&nbsp; &nbsp;1008984&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;26124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp; 124212&nbsp;&nbsp;&nbsp;&nbsp; 413000\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	-/+ buffers/cache:&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;471772&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;563336\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/swap/">Swap</a>:&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;2096472&nbsp;&nbsp; 842320&nbsp; &nbsp;&nbsp;&nbsp;1254152\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	这里显示的单位是KB。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	在<a href="http://www.zts1993.com/category/os/linux/">linux</a>的内存分配机制中，优先使用物理内存，当物理内存还有空闲时（还够用），不会释放其占用内存，就算占用内存的程序已经被关闭了，该程序所占用的内存用来做缓存使用，对于开启过的程序、或是读取刚存取过得数据会比较快。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Mem：表示物理内存统计。<br />\r\n-/+ buffers/cached：表示物理内存的缓存统计<br />\r\n<a href="http://www.zts1993.com/tag/swap/">Swap</a>：表示硬盘上交换分区的使用情况。只有mem被当前进程实际占用完,即没有了buffers和cache时，才会使用到<a href="http://www.zts1993.com/tag/swap/">swap</a>。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Mem 行（第一行）数据说明：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Total：1035108KB。表示物理内存总大小。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Used：1008984KB。表示总计分配给缓存（包含buffers 与cache ）使用的数量，但其中可能部分缓存并未实际使用。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Free：26124KB。表示未被分配的内存。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Shared：0kb。共享内存，一般系统不会用到。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Buffers：124212KB。系统分配但未被使用的buffers 数量。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Cached：413000KB。系统分配但未被使用的cache 数量。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	-/+ buffers/cache 行（第二行）数据说明：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Used：471772kb，实际使用的buffers 与cache 总量，也是实际使用的内存总量。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Free: 563336kb, 未被使用的buffers 与cache 和未被分配的内存之和，这就是系统当前实际可用内存。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<h2 style="color:#111111;font-size:15px;">\r\n	根据以上分析，可以得出一下结论：\r\n</h2>\r\n<h3 style="color:#111111;font-size:14px;">\r\n	1.&nbsp; 实际可用内存大小：\r\n</h3>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Free（-/+ buffers/cache行）= Free(Mem)+buffers(Mem)+Cached(Mem);\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	563336 = 26124 + 124212+ 413000\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<h3 style="color:#111111;font-size:14px;">\r\n	2.&nbsp; 已经分配的内存大小：\r\n</h3>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	Used(Mem) = Used(-/+ buffers/cache)+ buffers(Mem) + Cached(Mem)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	1008984kb = 471772 + 124212 +413000\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<h3 style="color:#111111;font-size:14px;">\r\n	3.&nbsp; 物理内存总大小\r\n</h3>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	total（Mem） = used(-/+ buffers/cache) + free(-/+ buffers/cache)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	1035108 = 471772 + 563336\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<h1 style="color:#444444;">\r\n	二． Swap配置对性能的影响\r\n</h1>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	分配太多的<a href="http://www.zts1993.com/tag/swap/">Swap</a>空间会浪费磁盘空间，而<a href="http://www.zts1993.com/tag/swap/">Swap</a>空间太少，则系统会发生错误。 如果系统的物理内存用光了，系统就会跑得很慢，但仍能运行；如果Swap空间用光了，那么系统就会发生错误。例如，Web服务器能根据不同的请求数量衍生出多个服务进程（或线程），如果Swap空间用完，则服务进程无法启动，通常会出现“application is out of memory”的错误，严重时会造成服务进程的死锁。因此Swap空间的分配是很重要的。<br />\r\n通常情况下，Swap空间应大于或等于物理内存的大小，最小不应小于64M，通常Swap空间的大小应是物理内存的2-2.5倍。但根据不同的应用，应有不同的配置：如果是小的桌面系统，则只需要较小的Swap空间，而大的服务器系统则视情况不同需要不同大小的Swap空间。特别是数据库服务器和Web服务器，随着访问量的增加，对Swap空间的要求也会增加，一般来说对于4G 以下的物理内存，配置2倍的swap，4G 以上配置1倍。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	另外，Swap分区的数量对性能也有很大的影响。因为Swap交换的操作是磁盘IO的操作，如果有多个Swap交换区，Swap空间的分配会以轮流的方式操作于所有的Swap，这样会大大均衡IO的负载，加快Swap交换的速度。如果只有一个交换区，所有的交换操作会使交换区变得很忙，使系统大多数时间处于等待状态，效率很低。用性能监视工具就会发现，此时的CPU并不很忙，而系统却慢。这说明，瓶颈在IO上，依靠提高CPU的速度是解决不了问题的。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<h1 style="color:#444444;">\r\n	三.&nbsp;&nbsp;<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>&nbsp;内存机制\r\n</h1>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>支持虚拟内存(Virtual Mmemory)，虚拟内存是指使用磁盘当作RAM的扩展，这样可用的内存的大小就相应地增大了。内核会将暂时不用的内存块的内容写到硬盘上，这样一来，这块内存就可用于其它目的。当需要用到原始的内容时，它们被重新读入内存。这些操作对用户来说是完全透明的;<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>下运行的程序只是看到有大量的内存可供使用而并没有注意到时不时它们的一部分是驻留在硬盘上的。当然，读写硬盘要比直接使用真实内存慢得多(要慢数千倍)，所以程序就不会象一直在内存中运行的那样快。用作虚拟内存的硬盘部分被称为交换空间(Swap Space)。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	一般，在交换空间中的页面首先被换入内存;如果此时没有足够的物理内存来容纳它们又将被交换出来(到其他的交换空间中)。如果没有足够的虚拟内存来容纳所有这些页面，<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>就会波动而不正常;但经过一段较长的时间<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>会恢复，但此时系统已不可用了。<br />\r\n有 时，尽管有许多的空闲内存，仍然会有许多的交换空间正被使用。这种情况是有可能发生的，例如如果在某一时刻有进行交换的必要，但后来一个占用很多物理内存 的大进程结束并释放内存时。被交换出的数据并不会自动地交换进内存，除非有这个需要时。此时物理内存会在一段时间内保持空闲状态。对此并没有什么可担心 的，但是知道了是怎么一回事，也就无所谓了。<br />\r\n许多操作系统使用了虚拟内存的方法。因为它们仅在运行时才需要交换空间，以解决不会在同一时间使用交换空间，因此，除了当前正在运行的操作系统的交换空间，其它的就是一种浪费。所以让它们共享一个交换空间将会更有效率。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>&nbsp;</strong>\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<strong>注意：</strong>如果会有几个人同时使用这个系统，他们都将消耗内存。然而，如果两个人同时运行一个程序，内存消耗的总量并不是翻倍，因为代码页以及共享的库只存在一份。<br />\r\n<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>系统常常动不动就使用交换空间，以保持尽可能多的空闲物理内存。即使并没有什么事情需要内存，<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>也会交换出暂时不用的内存页面。这可以避免等待交换所需的时间：当磁盘闲着，就可以提前做好交换。可以将交换空间分散在几个硬盘之上。针对相关磁盘的速度以及对磁盘的访问模式，这样做可以提高性能。<br />\r\n与访问物理内存相比，磁盘的读写是很慢的。另外，在相应较短的时间内多次读磁盘同样的部分也是常有的事。例如，某人也许首先阅读了一段E-mail消息，然后为了答复又将这段消息读入编辑器中，然后又在将这个消息拷贝到文件夹中时，使得邮件程序又一次读入它。或者考虑一下在一个有着许多用户的系统中 ls命令会被使用多少次。通过将信息从磁盘上仅读入一次并将其存于内存中，除了第一次读以外，可以加快所有其它读的速度。这叫作磁盘缓冲(Disk Buffering)，被用作此目的的内存称为高速缓冲(Buffer Cache)。但是，由于内存是一种有限而又不充足的资源，高速缓冲不可能做的很大(它不可能包容要用到的所有数据)。当缓冲充满了数据时，其中最长时间不用的数据将被舍弃以腾出内存空间用于新的数据。<br />\r\n对写磁盘操作来说磁盘缓冲技术同样有效。一方面，被写入磁盘的数据常常会很快地又被读出(例如，原代码文件被保存到一个文件中，又被编译器读入)，所以将要被写的数据放入缓冲中是个好主意。另一方面，通过将数据放入缓冲中，而不是将其立刻写入磁盘，程序可以加快运行的速度。以后，写的操作可以在后台完成，而不会拖延程序的执行。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	大多数操作系统都有高速缓冲(尽管可能称呼不同)，但是并不是都遵守上面的原理。有些是直接写(Write-Through)：数据将被立刻写入磁盘(当然，数据也被放入缓存中)。如果写操作是在以后做的，那么该缓存被称为后台写(Write-Back)。后台写比直接写更有效，但也容易出错：如果机器崩溃，或者突然掉电，缓冲中改变过的数据就被丢失了。如果仍未被写入的数据含有重要的薄记信息，这甚至可能意味着文件系统(如果有的话)已不完整。<br />\r\n针对以上的原因，出现了很多的日志文件系统，数据在缓冲区修改后，同时会被文件系统记录修改信息，这样即使此时系统掉电，系统重启后会首先从日志记录中恢复数据，保证数据不丢失。当然这些问题不再本文的叙述范围。<br />\r\n由于上述原因，在使用适当的关闭过程之前，绝对不要关掉电源，Sync命令倾空(Flushes)缓冲，也即，强迫所有未被写的数据写入磁盘，可用以确定所有的写操作都已完成。在传统的UNIX系统中，有一个叫做update的程序运行于后台，每隔30秒做一次sync操作，因此通常无需手工使用sync命令了。<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>另外有一个后台程序，Bdflush，这个程序执行更频繁的但不是全面的同步操作，以避免有时sync的大量磁盘I/O操作所带来的磁盘的突然冻结。<br />\r\n在<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>中，Bdflush是由update启动的。通常没有理由来担心此事，但如果由于某些原因bdflush进程死掉了，内核会对此作出警告，此时你就要手工地启动它了(/sbin/update)。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	缓存(Cache)实际并不是缓冲文件的，而是缓冲块的，块是磁盘I/O操作的最小单元(在<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>中，它们通常是1KB)。 这样，目录、超级块、其它文件系统的薄记数据以及非文件系统的磁盘数据都可以被缓冲了。缓冲的效力主要是由它的大小决定的。缓冲太小的话等于没用。它只能 容纳一点数据，因此在被重用时，所有缓冲的数据都将被倾空。实际的大小依赖于数据读写的频次、相同数据被访问的频率。只有用实验的方法才能知道。<br />\r\n如果缓存有固定的大小，那么缓存太大了也不好，因为这会使得空闲的内存太小而导致进行交换操作(这同样是慢的)。为了最有效地使用实际内存，<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>自动地使用所有空闲的内存作为高速缓冲，当程序需要更多的内存时，它也会自动地减小缓冲的大小。<br />\r\n这就是一般情况下<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>内存的一般机制，真正的<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>内存的运行机制远远比这个复杂。\r\n</p>', '2012-10-10');
INSERT INTO `posts` (`post_hits`, `ID`, `post_author`, `post_title`, `post_status`, `comment_status`, `post_content`, `time`) VALUES
(29, 14, 0, '集群技术总结', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	集群软件的分类<br />\r\n一般来讲，集群软件根据侧重的方向和试图解决的问题，分为三大类：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	高性能集群（High performance cluster，HPC）；<br />\r\n负载均衡集群（Load balance cluster， LBC）；<br />\r\n高可用性集群（High availability cluster，HAC）。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	按照集群工作的层面，可分为：数据库服务器集群，应用服务器集群，交换机集群等；\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	按照集群的架构，可分为：共享磁盘型，非共享磁盘型；\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	按照集群粒度不同：基于IO；基于操作系统；基于数据库实例的；基于数据库等。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	什么是高性能集群<br />\r\n高性能集群（High performance cluster，HPC），它是利用一个集群中的多台机器共同完成同一件任务，使得完成任务的速度和可靠性都远远高于单机运行的效果。弥补了单机性能上的不足。该集群在天气预报、环境监控等数据量大，计算复杂的环境中应用比较多；\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	什么是负载均衡集群<br />\r\n负载均衡集群（Load balance cluster， LBC），它是利用一个集群中的多台单机，完成许多并行的小的工作。一般情况下，如果一个应用使用的人多了，那么用户请求的响应时间就会增大，机器的性能也会受到影响，如果使用负载均衡集群，那么集群中任意一台机器都能响应用户的请求，这样集群就会在用户发出服务请求之后，选择当时负载最小，能够提供最好的服务的这台机器来接受请求并相应，这样就可用用集群来增加系统的可用性和稳定性。这类集群在网站中使用较多；\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	什么是高可用性集群<br />\r\n高可用性集群（High availability cluster，HAC），它是利用集群中系统 的冗余，当系统中某台机器发生损坏的时候，其他后备的机器可以迅速的接替它来启动服务，等待故障机的维修和返回。最大限度的保证集群中服务的可用性。这类系统一般在银行，电信服务这类对系统可靠性有高的要求的领域有着广泛的应用。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	您为什么需要集群<br />\r\n伴随着企业的成长，在业务量提高的同时，系统的访问量和数据流量的快速增长，其处理能力和计算强度也相应增大，使得单一设备根本无法承担。在此情况下，如果扔掉现有设备去做大量的硬件升级，这样将造成现有资源的浪费，而且如果再面临下一次业务量的提升，这又将导致再一次硬件升级的高额成本投入，甚至性能再卓越的设备也不能满足当前业务量的需求。于是，人们希望通过几个中小型服务器组建集群，实现数据库的负载均衡，在需要更高数据库处理速度，我们只要简单地增加数据库服务器就可以得到扩展。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	数据库作为应用系统的核心，在企业的IT系统中起着非常重要的作用，单一设备根本无法保证系统的持续运行，发生系统故障，严重影响系统的正常运行，甚至带来巨大的经济损失。于是人们希望通过组建数据库集群，来保证系统的可用性，一旦某节点发生故障，系统会自动故障转移，实现系统的持续工作。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	企业的数据是企业的一些重要信息，一些核心数据甚至关系着企业的命脉，单一设备根本无法保证数据的安全性，一旦发生丢失，很难再找回来，于是人们希望通过组建数据库集群，实现数据集群的冗余，通过多份数据来保证安全性。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	参考链接：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	http://wenku.<a href="http://www.zts1993.com/tag/baidu/">baidu</a>.com/view/e73ec488d0d233d4b14e69af.<a href="http://www.zts1993.com/tag/html/">html</a>\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	分布式与集群的区别\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	例如：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	如果一个任务由10个子任务组成，每个子任务单独执行需1小时，则在一台服务器上执行改任务需10小时。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	采用分布式方案，提供10台服务器，每台服务器只负责处理一个子任务，不考虑子任务间的依赖关系，执行完这个任务只需一个小时。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	而采用集群方案，同样提供10台服务器，每台服务器都能独立处理这个任务。假设有10个任务同时到达，10个服务器将同时工作，10小后，10个任务同时完成，这样，整身来看，还是1小时内完成一个任务！\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	以下是摘抄自网络文章：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	集群概念\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	1. 两大关键特性<br />\r\n集群是一组协同工作的服务实体，用以提供比单一服务实体更具扩展性与可用性的服务平台。在客户端看来，一个集群就象是一个服务实体，但事实上集群由一组服务实体组成。与单一服务实体相比较，集群提供了以下两个关键特性：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 可扩展性－－集群的性能不限于单一的服务实体，新的服务实体可以动态地加入到集群，从而增强集群的性能。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 高可用性－－集群通过服务实体冗余使客户端免于轻易遇到out of service的警告。在集群中，同样的服务可以由多个服务实体提供。如果一个服务实体失败了，另一个服务实体会接管失败的服务实体。集群提供的从一个出 错的服务实体恢复到另一个服务实体的功能增强了应用的可用性。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	2. 两大能力<br />\r\n为了具有可扩展性和高可用性特点，集群的必须具备以下两大能力：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 负载均衡－－负载均衡能把任务比较均衡地分布到集群环境下的计算和网络资源。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 错误恢复－－由于某种原因，执行某个任务的资源出现故障，另一服务实体中执行同一任务的资源接着完成任务。这种由于一个实体中的资源不能工作，另一个实体中的资源透明的继续完成任务的过程叫错误恢复。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	负载均衡和错误恢复都要求各服务实体中有执行同一任务的资源存在，而且对于同一任务的各个资源来说，执行任务所需的信息视图（信息上下文）必须是一样的。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	3. 两大技术<br />\r\n实现集群务必要有以下两大技术：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 集群地址－－集群由多个服务实体组成，集群客户端通过访问集群的集群地址获取集群内部各服务实体的功能。具有单一集群地址（也叫单一影像）是集群的一个基 本特征。维护集群地址的设置被称为负载均衡器。负载均衡器内部负责管理各个服务实体的加入和退出，外部负责集群地址向内部服务实体地址的转换。有的负载均 衡器实现真正的负载均衡算法，有的只支持任务的转换。只实现任务转换的负载均衡器适用于支持ACTIVE-STANDBY的集群环境，在那里，集群中只有 一个服务实体工作，当正在工作的服务实体发生故障时，负载均衡器把后来的任务转向另外一个服务实体。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	· 内部通信－－为了能协同工作、实现负载均衡和错误恢复，集群各实体间必须时常通信，比如负载均衡器对服务实体心跳测试信息、服务实体间任务执行上下文信息的通信。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	具有同一个集群地址使得客户端能访问集群提供的计算服务，一个集群地址下隐藏了各个服务实体的内部地址，使得客户要求的计算服务能在各个服务实体之间分布。内部通信是集群能正常运转的基础，它使得集群具有均衡负载和错误恢复的能力。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	集群分类<br />\r\n<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>集群主要分成三大类( 高可用集群， 负载均衡集群，科学计算集群)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	高可用集群( High Availability Cluster)<br />\r\n负载均衡集群(Load Balance Cluster)<br />\r\n科学计算集群(High Performance Computing Cluster)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	================================================\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	具体包括：\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>&nbsp;High Availability 高可用集群<br />\r\n(普通两节点双机热备，多节点HA集群，RAC, shared, share-nothing集群等)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>&nbsp;Load Balance 负载均衡集群<br />\r\n(LVS等….)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://www.zts1993.com/tag/linux/" target="_blank">Linux</a>&nbsp;High Performance Computing 高性能科学计算集群<br />\r\n(Beowulf 类集群….)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	分布式存储<br />\r\n其他类<a href="http://www.zts1993.com/category/os/linux/">linux</a>集群<br />\r\n(如Openmosix, rendering farm 等..)\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	详细介绍<br />\r\n1. 高可用集群(High Availability Cluster)<br />\r\n常见的就是2个节点做成的HA集群，有很多通俗的不科学的名称，比如”双机热备”, “双机互备”, “双机”.<br />\r\n高可用集群解决的是保障用户的应用程序持续对外提供服务的能力。 (请注意高可用集群既不是用来保护业务数据的，保护的是用户的业务程序对外不间断提供服务，把因软件/硬件/人为造成的故障对业务的影响降低到最小程度)。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	2. 负载均衡集群(Load Balance Cluster)<br />\r\n负载均衡系统：集群中所有的节点都处于活动状态，它们分摊系统的工作负载。一般Web服务器集群、数据库集群和应用服务器集群都属于这种类型。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	负载均衡集群一般用于相应网络请求的网页服务器，数据库服务器。这种集群可以在接到请求时，检查接受请求较少，不繁忙的服务器，并把请求转到这些服务器上。从检查其他服务器状态这一点上看，负载均衡和容错集群很接近，不同之处是数量上更多。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	3. 科学计算集群(High Performance Computing Cluster)<br />\r\n高性能计算(High Perfermance Computing)集群，简称HPC集群。这类集群致力于提供单个计算机所不能提供的强大的计算能力。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	高性能计算分类<br />\r\n高吞吐计算(High-throughput Computing)<br />\r\n有一类高性能计算，可以把它分成若干可以并行的子任务，而且各个子任务彼此间没有什么关联。象在家搜寻外星人（ SETI@HOME — Search for Extraterrestrial Intelligence at Home ）就是这一类型应用。这一项目是利用Internet上的闲置的计算资源来搜寻外星人。SETI项目的服务器将一组数据和数据模式发给Internet上 参加SETI的计算节点，计算节点在给定的数据上用给定的模式进行搜索，然后将搜索的结果发给服务器。服务器负责将从各个计算节点返回的数据汇集成完整的 数据。因为这种类型应用的一个共同特征是在海量数据上搜索某些模式，所以把这类计算称为高吞吐计算。所谓的Internet计算都属于这一类。按照 Flynn的分类，高吞吐计算属于SIMD（Single Instruction/Multiple Data）的范畴。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	分布计算(Distributed Computing)<br />\r\n另一类计算刚好和高吞吐计算相反，它们虽然可以给分成若干并行的子任务，但是子任务间联系很紧密，需要大量的数据交换。按照Flynn的分类，分布式的高性能计算属于MIMD（Multiple Instruction/Multiple Data）的范畴。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	4. 分布式（集群）与集群的联系与区别<br />\r\n分布式是指将不同的业务分布在不同的地方。<br />\r\n而集群指的是将几台服务器集中在一起，实现同一业务。<br />\r\n分布式中的每一个节点，都可以做集群。<br />\r\n而集群并不一定就是分布式的。<br />\r\n举例：就比如新浪网，访问的人多了，他可以做一个群集，前面放一个响应服务器，后面几台服务器完成同一业务，如果有业务访问的时候，响应服务器看哪台服务器的负载不是很重，就将给哪一台去完成。<br />\r\n而分布式，从窄意上理解，也跟集群差不多， 但是它的组织比较松散，不像集群，有一个组织性，一台服务器垮了，其它的服务器可以顶上来。<br />\r\n分布式的每一个节点，都完成不同的业务，一个节点垮了，哪这个业务就不可访问了。\r\n</p>', '2012-10-10'),
(331, 15, 0, 'OpenVZ与XEN架构技术对比', '', '', '<p style="color:#444444;font-size:12.727272033691406px;">\r\n	我们在选购VPS主机的时候，会看到OpenVZ和XEN两种不同的VPS方案，包括我在初期选择购买VPS的时候也比较纠结到底两种是什么意思？从价格 上看前者比后者便宜一些。正好老左刚才想到这个问题，就查阅资料，整理这篇文章，算是给我，以及新手的科普文章，一起扫盲，这样也可以便利大家选择更好的 VPS商家和产品。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	<a href="http://1.cdnz.sinaapp.com/wp-content/uploads/2012/10/xen-openvz.gif"><img title="xen-openvz" src="http://1.cdnz.sinaapp.com/wp-content/uploads/2012/10/xen-openvz.gif" alt="xen-openvz" width="300" style="border:1px solid #DDDDDD;" /></a>\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	第一点，关于超售问题。我们在一些VPS商销售的产品列表中，有些VPS商还故意把超售比例列举出来，比如OpenVZ方案超售10%。主要问题在 于我们如果选择XEN 512M内存的话，会单独的划分给我们使用512M，即便用不到也会给我们，但是OpenVZ是共用内存，我们买512M的意思是，我们不能超过 512M，如果我们一般使用100M，那还有412M是共享在其他地方，这就导致主机商会去超售。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	第二点，OpenVZ和XEN都是虚拟化主机技术，Openvz是操作系统级别的虚拟化技术，一定意义表明是有着更优的性能。但是Xen是半虚拟化技术，我们可以自由的加载内核模块，虚拟的内存和IO，稳定而且可以预测。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	第三点，不要图便宜。随着建站的需要，大家开始从主机关注到VPS上，由于我们理念和成本的问题，我们站长都追求低价产品，比如3-5美元512M VPS，国人ONE MEN 20-30元每月的VPS一抓一大把，我们也不能说质量不好，在没有问题的时候质量都好，一旦出现问题技术能否跟上，服务是否跟上等这就体现价格和服务的 时候。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	关于超售问题，我有看到在论坛有朋友提到XEN也是可以超售的，这种的超售与CPU超售不同，1G就是1G，要XEN的超售只有去增加内存增加销售用户。\r\n</p>\r\n<p style="color:#444444;font-size:12.727272033691406px;">\r\n	如果我们玩玩VPS，可以选择低价的OpenVZ学习玩玩，如果真做网站，建议还是选择XEN VPS，一般512M的价格在100元/月左右比较合理。\r\n</p>', '2012-10-10');

-- --------------------------------------------------------

--
-- 表的结构 `tags`
--

CREATE TABLE IF NOT EXISTS `tags` (
  `tag_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `slug` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`tag_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `terms`
--

CREATE TABLE IF NOT EXISTS `terms` (
  `term_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `slug` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`term_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) CHARACTER SET latin1 NOT NULL,
  `user_pass` varchar(64) CHARACTER SET latin1 NOT NULL,
  `user_nicename` varchar(50) CHARACTER SET latin1 NOT NULL,
  `user_email` varchar(100) CHARACTER SET latin1 NOT NULL,
  `user_url` varchar(200) CHARACTER SET latin1 NOT NULL,
  `user_registered` date NOT NULL DEFAULT '0000-00-00',
  `user_activation_key` text CHARACTER SET latin1 NOT NULL,
  `user_status` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
